	component cineraria_core is
		port (
			core_clk             : in    std_logic                     := 'X';             -- clk
			dipsw_export         : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- export
			gpio0_export         : inout std_logic_vector(31 downto 0) := (others => 'X'); -- export
			led_export           : out   std_logic_vector(9 downto 0);                     -- export
			led7seg_0_export     : out   std_logic_vector(15 downto 0);                    -- export
			led7seg_1_export     : out   std_logic_vector(15 downto 0);                    -- export
			led7seg_2_export     : out   std_logic_vector(15 downto 0);                    -- export
			pcm_clk              : in    std_logic                     := 'X';             -- clk
			pcm_mute             : out   std_logic;                                        -- mute
			pcm_aud_l            : out   std_logic;                                        -- aud_l
			pcm_aud_r            : out   std_logic;                                        -- aud_r
			peri_clk             : in    std_logic                     := 'X';             -- clk
			ps2_kb_CLK           : inout std_logic                     := 'X';             -- CLK
			ps2_kb_DAT           : inout std_logic                     := 'X';             -- DAT
			psw_export           : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			reset_reset_n        : in    std_logic                     := 'X';             -- reset_n
			sd_nCS               : out   std_logic;                                        -- nCS
			sd_SCK               : out   std_logic;                                        -- SCK
			sd_SDO               : out   std_logic;                                        -- SDO
			sd_SDI               : in    std_logic                     := 'X';             -- SDI
			sd_CD                : in    std_logic                     := 'X';             -- CD
			sd_WP                : in    std_logic                     := 'X';             -- WP
			sdr_addr             : out   std_logic_vector(12 downto 0);                    -- addr
			sdr_ba               : out   std_logic_vector(1 downto 0);                     -- ba
			sdr_cas_n            : out   std_logic;                                        -- cas_n
			sdr_cke              : out   std_logic;                                        -- cke
			sdr_cs_n             : out   std_logic;                                        -- cs_n
			sdr_dq               : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdr_dqm              : out   std_logic_vector(1 downto 0);                     -- dqm
			sdr_ras_n            : out   std_logic;                                        -- ras_n
			sdr_we_n             : out   std_logic;                                        -- we_n
			usb_test_dataouttick : out   std_logic;                                        -- test_dataouttick
			usb_test_dataintick  : out   std_logic;                                        -- test_dataintick
			usb_usbclk_48mhz     : in    std_logic                     := 'X';             -- usbclk_48mhz
			usb_usb_dp           : inout std_logic                     := 'X';             -- usb_dp
			usb_usb_dm           : inout std_logic                     := 'X';             -- usb_dm
			usb_usb_oe_n         : out   std_logic;                                        -- usb_oe_n
			usb_usb_fullspeed    : out   std_logic;                                        -- usb_fullspeed
			vga_clk              : in    std_logic                     := 'X';             -- clk
			vga_rout             : out   std_logic_vector(4 downto 0);                     -- rout
			vga_gout             : out   std_logic_vector(4 downto 0);                     -- gout
			vga_bout             : out   std_logic_vector(4 downto 0);                     -- bout
			vga_hsync_n          : out   std_logic;                                        -- hsync_n
			vga_vsync_n          : out   std_logic;                                        -- vsync_n
			vga_enable           : out   std_logic                                         -- enable
		);
	end component cineraria_core;

